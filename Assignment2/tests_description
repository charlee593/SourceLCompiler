In the passing directory there are the following files: 
A1a.488  A1b.488  A1c.488  A1d.488  A1e.488  empty_scope.488  expressions.488  nested.488

For the passing tests we used our A1 test cases as basic guidelines:

-A1a.488 uses all arithmetic, logical and comparison operators. 
It also uses a simple anonymus parameterless function.

-A1b.488 uses arrays including all forms of array declaration, 
positive and negative bounds. 

-A1c.488 uses all forms of loop building and loop exit constructs
demonstrated multiple ways.

-A1d.488 uses non-recursive functions and procedures with and 
without parameters. It also demonstrates how spacing can
be applied in the Source Language.

-A1e.488  uses recursive functions and procedures with and 
without parameters including nested procedures  
and nested function declarations.

-empty_scope.488 tests whether an empty_scope would be accepted on its own. This was the base case.

Furthermore we created more passing tests to test more complex programs
which were expected to be valid:

-expression.488 tests more complex expressions. It tests mainly for more intricate parenthesis, however
it also tests some important valid corner cases.

-nested.488 is complex program that contains nested loops, nested if statements, nested function declaration and
nested scopes. All of which are syntactically correct.


In the failing directory there are the following files: 
add.488 
Tests illegal expression, missing an expression in between addition expression.

array_assignment.488
Tests illegal statement, arrayname missing expression.

array_param.488
Tests illegal statement, passing an array parameter to a function statement.

direct_assignment.488
Tests illegal statement, missing declaration. 

empty_brackets.488
Tests illegal expression, between the parentheses, it misses an arguments.

empty_if.488
Tests illegal statement, missing an expression in the in statement.

exit_1.488
Tests illegal statement, missing an expression in the exit conditional statement.

invalid_get_usage.488
Tests illegal statement, input uses illegal variable input.

invalid_negation.488
Tests illegal expression, negation ! has lower precedence than the comparison expression.

invalid_statement.488
Tests illegal statement, lack statement in scope.

invalid_yields.488
Tests illegal expression,

keyword_variable.488
missing_begin.488
negative_array_bound.488
no_do_whileloop.488
no_do_whileloop.488~
no_param_funct_1.488
no_param_funct_2.488
no_parantheses_return.488
threeway_comparison.488
variable_declaration_1.488
variable_declaration_2.488


